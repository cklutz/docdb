### YamlMime:DocDB
type: Table
id: table.person.person
description: 'Human beings involved with AdventureWorks: employees, customer contacts, and vendor contacts.'
createdAt: 2023-05-08T12:07:29.4770000
lastModifiedAt: 2023-05-08T12:07:39.4100000
name: Person.Person
foreignKeys: []
checks: []
partitionInfo:
  isPartitioned: false
  columns: []
  partitionScheme: 
  fileGroup: 
indexes: []
columns:
- type: TableColumn
  id: table.person.person.column.businessentityid
  description: Primary key for Person records.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: BusinessEntityID
  dataType: INT
  maxLengthBytes: 4
  precision: 10
  scale: 0
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: 
  script: ""
- type: TableColumn
  id: table.person.person.column.persontype
  description: 'Primary type of person: SC = Store Contact, IN = Individual (retail) customer, SP = Sales person, EM = Employee (non-sales), VC = Vendor contact, GC = General contact'
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: PersonType
  dataType: NCHAR(2)
  maxLengthBytes: 2
  precision: 0
  scale: 0
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: 
  script: ""
- type: TableColumn
  id: table.person.person.column.namestyle
  description: 0 = The data in FirstName and LastName are stored in western style (first name, last name) order.  1 = Eastern style (last name, first name) order.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: NameStyle
  dataType: NAMESTYLE
  maxLengthBytes: 1
  precision: 1
  scale: 0
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: ((0))
  script: ""
- type: TableColumn
  id: table.person.person.column.title
  description: A courtesy title. For example, Mr. or Ms.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: Title
  dataType: NVARCHAR(8)
  maxLengthBytes: 8
  precision: 0
  scale: 0
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: 
  script: ""
- type: TableColumn
  id: table.person.person.column.firstname
  description: First name of the person.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: FirstName
  dataType: NAME
  maxLengthBytes: 50
  precision: 0
  scale: 0
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: 
  script: ""
- type: TableColumn
  id: table.person.person.column.middlename
  description: Middle name or middle initial of the person.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: MiddleName
  dataType: NAME
  maxLengthBytes: 50
  precision: 0
  scale: 0
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: 
  script: ""
- type: TableColumn
  id: table.person.person.column.lastname
  description: Last name of the person.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: LastName
  dataType: NAME
  maxLengthBytes: 50
  precision: 0
  scale: 0
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: 
  script: ""
- type: TableColumn
  id: table.person.person.column.suffix
  description: Surname suffix. For example, Sr. or Jr.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: Suffix
  dataType: NVARCHAR(10)
  maxLengthBytes: 10
  precision: 0
  scale: 0
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: 
  script: ""
- type: TableColumn
  id: table.person.person.column.emailpromotion
  description: '0 = Contact does not wish to receive e-mail promotions, 1 = Contact does wish to receive e-mail promotions from AdventureWorks, 2 = Contact does wish to receive e-mail promotions from AdventureWorks and selected partners. '
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: EmailPromotion
  dataType: INT
  maxLengthBytes: 4
  precision: 10
  scale: 0
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: ((0))
  script: ""
- type: TableColumn
  id: table.person.person.column.additionalcontactinfo
  description: 'Additional contact information about the person stored in xml format. '
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: AdditionalContactInfo
  dataType: ADDITIONALCONTACTINFOSCHEMACOLLECTION
  maxLengthBytes: -1
  precision: 0
  scale: 0
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: 
  script: ""
- type: TableColumn
  id: table.person.person.column.demographics
  description: Personal information such as hobbies, and income collected from online shoppers. Used for sales analysis.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: Demographics
  dataType: INDIVIDUALSURVEYSCHEMACOLLECTION
  maxLengthBytes: -1
  precision: 0
  scale: 0
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: 
  script: ""
- type: TableColumn
  id: table.person.person.column.rowguid
  description: ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: rowguid
  dataType: UNIQUEIDENTIFIER
  maxLengthBytes: 16
  precision: 0
  scale: 0
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: (newid())
  script: ""
- type: TableColumn
  id: table.person.person.column.modifieddate
  description: Date and time the record was last updated.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: ModifiedDate
  dataType: DATETIME
  maxLengthBytes: 8
  precision: 23
  scale: 3
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: (getdate())
  script: ""
script: |+
  SET ANSI_NULLS ON
  GO

  SET QUOTED_IDENTIFIER ON
  GO

  CREATE TABLE [Person].[Person](
  	[BusinessEntityID] [int] NOT NULL,
  	[PersonType] [nchar](2) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
  	[NameStyle] [dbo].[NameStyle] NOT NULL,
  	[Title] [nvarchar](8) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
  	[FirstName] [dbo].[Name] NOT NULL,
  	[MiddleName] [dbo].[Name] NULL,
  	[LastName] [dbo].[Name] NOT NULL,
  	[Suffix] [nvarchar](10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
  	[EmailPromotion] [int] NOT NULL,
  	[AdditionalContactInfo] [xml](CONTENT [Person].[AdditionalContactInfoSchemaCollection]) NULL,
  	[Demographics] [xml](CONTENT [Person].[IndividualSurveySchemaCollection]) NULL,
  	[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,
  	[ModifiedDate] [datetime] NOT NULL,
   CONSTRAINT [PK_Person_BusinessEntityID] PRIMARY KEY CLUSTERED
  (
  	[BusinessEntityID] ASC
  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
  ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

  GO

  CREATE UNIQUE NONCLUSTERED INDEX [AK_Person_rowguid] ON [Person].[Person]
  (
  	[rowguid] ASC
  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
  GO

  SET ANSI_PADDING ON
  GO

  CREATE NONCLUSTERED INDEX [IX_Person_LastName_FirstName_MiddleName] ON [Person].[Person]
  (
  	[LastName] ASC,
  	[FirstName] ASC,
  	[MiddleName] ASC
  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
  GO

  SET ARITHABORT ON
  SET CONCAT_NULL_YIELDS_NULL ON
  SET QUOTED_IDENTIFIER ON
  SET ANSI_NULLS ON
  SET ANSI_PADDING ON
  SET ANSI_WARNINGS ON
  SET NUMERIC_ROUNDABORT OFF
  GO

  CREATE PRIMARY XML INDEX [PXML_Person_AddContact] ON [Person].[Person]
  (
  	[AdditionalContactInfo]
  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
  GO

  SET ARITHABORT ON
  SET CONCAT_NULL_YIELDS_NULL ON
  SET QUOTED_IDENTIFIER ON
  SET ANSI_NULLS ON
  SET ANSI_PADDING ON
  SET ANSI_WARNINGS ON
  SET NUMERIC_ROUNDABORT OFF
  GO

  CREATE PRIMARY XML INDEX [PXML_Person_Demographics] ON [Person].[Person]
  (
  	[Demographics]
  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
  GO

  SET ARITHABORT ON
  SET CONCAT_NULL_YIELDS_NULL ON
  SET QUOTED_IDENTIFIER ON
  SET ANSI_NULLS ON
  SET ANSI_PADDING ON
  SET ANSI_WARNINGS ON
  SET NUMERIC_ROUNDABORT OFF
  GO

  CREATE XML INDEX [XMLPATH_Person_Demographics] ON [Person].[Person]
  (
  	[Demographics]
  )
  USING XML INDEX [PXML_Person_Demographics] FOR PATH WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
  GO

  SET ARITHABORT ON
  SET CONCAT_NULL_YIELDS_NULL ON
  SET QUOTED_IDENTIFIER ON
  SET ANSI_NULLS ON
  SET ANSI_PADDING ON
  SET ANSI_WARNINGS ON
  SET NUMERIC_ROUNDABORT OFF
  GO

  CREATE XML INDEX [XMLPROPERTY_Person_Demographics] ON [Person].[Person]
  (
  	[Demographics]
  )
  USING XML INDEX [PXML_Person_Demographics] FOR PROPERTY WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
  GO

  SET ARITHABORT ON
  SET CONCAT_NULL_YIELDS_NULL ON
  SET QUOTED_IDENTIFIER ON
  SET ANSI_NULLS ON
  SET ANSI_PADDING ON
  SET ANSI_WARNINGS ON
  SET NUMERIC_ROUNDABORT OFF
  GO

  CREATE XML INDEX [XMLVALUE_Person_Demographics] ON [Person].[Person]
  (
  	[Demographics]
  )
  USING XML INDEX [PXML_Person_Demographics] FOR VALUE WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
  GO

  ALTER TABLE [Person].[Person] ADD  CONSTRAINT [DF_Person_NameStyle]  DEFAULT ((0)) FOR [NameStyle]
  GO

  ALTER TABLE [Person].[Person] ADD  CONSTRAINT [DF_Person_EmailPromotion]  DEFAULT ((0)) FOR [EmailPromotion]
  GO

  ALTER TABLE [Person].[Person] ADD  CONSTRAINT [DF_Person_rowguid]  DEFAULT (newid()) FOR [rowguid]
  GO

  ALTER TABLE [Person].[Person] ADD  CONSTRAINT [DF_Person_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]
  GO

  ALTER TABLE [Person].[Person]  WITH CHECK ADD  CONSTRAINT [FK_Person_BusinessEntity_BusinessEntityID] FOREIGN KEY([BusinessEntityID])
  REFERENCES [Person].[BusinessEntity] ([BusinessEntityID])
  GO

  ALTER TABLE [Person].[Person] CHECK CONSTRAINT [FK_Person_BusinessEntity_BusinessEntityID]
  GO

  ALTER TABLE [Person].[Person]  WITH CHECK ADD  CONSTRAINT [CK_Person_EmailPromotion] CHECK  (([EmailPromotion]>=(0) AND [EmailPromotion]<=(2)))
  GO

  ALTER TABLE [Person].[Person] CHECK CONSTRAINT [CK_Person_EmailPromotion]
  GO

  ALTER TABLE [Person].[Person]  WITH CHECK ADD  CONSTRAINT [CK_Person_PersonType] CHECK  (([PersonType] IS NULL OR (upper([PersonType])='GC' OR upper([PersonType])='SP' OR upper([PersonType])='EM' OR upper([PersonType])='IN' OR upper([PersonType])='VC' OR
  upper([PersonType])='SC')))
  GO

  ALTER TABLE [Person].[Person] CHECK CONSTRAINT [CK_Person_PersonType]
  GO

  SET ANSI_NULLS ON
  GO

  SET QUOTED_IDENTIFIER ON
  GO

  CREATE TRIGGER [Person].[iuPerson] ON [Person].[Person]
  AFTER INSERT, UPDATE NOT FOR REPLICATION AS
  BEGIN
      DECLARE @Count int;

      SET @Count = @@ROWCOUNT;
      IF @Count = 0
          RETURN;

      SET NOCOUNT ON;

      IF UPDATE([BusinessEntityID]) OR UPDATE([Demographics])
      BEGIN
          UPDATE [Person].[Person]
          SET [Person].[Person].[Demographics] = N'<IndividualSurvey xmlns="http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey">
              <TotalPurchaseYTD>0.00</TotalPurchaseYTD>
              </IndividualSurvey>'
          FROM inserted
          WHERE [Person].[Person].[BusinessEntityID] = inserted.[BusinessEntityID]
              AND inserted.[Demographics] IS NULL;

          UPDATE [Person].[Person]
          SET [Demographics].modify(N'declare default element namespace "http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey";
              insert <TotalPurchaseYTD>0.00</TotalPurchaseYTD>
              as first
              into (/IndividualSurvey)[1]')
          FROM inserted
          WHERE [Person].[Person].[BusinessEntityID] = inserted.[BusinessEntityID]
              AND inserted.[Demographics] IS NOT NULL
              AND inserted.[Demographics].exist(N'declare default element namespace
                  "http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey";
                  /IndividualSurvey/TotalPurchaseYTD') <> 1;
      END;
  END;

  GO

  ALTER TABLE [Person].[Person] ENABLE TRIGGER [iuPerson]
  GO

