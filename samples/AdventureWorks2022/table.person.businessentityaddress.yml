### YamlMime:DocDB
type: Table
id: table.person.businessentityaddress
description: Cross-reference table mapping customers, vendors, and employees to their addresses.
createdAt: 2023-05-08T12:07:29.4170000
lastModifiedAt: 2023-05-08T12:07:38.5400000
name: Person.BusinessEntityAddress
foreignKeys: []
checks: []
partitionInfo:
  isPartitioned: false
  columns: []
  partitionScheme: 
  fileGroup: 
indexes: []
columns:
- type: TableColumn
  id: table.person.businessentityaddress.column.businessentityid
  description: Primary key. Foreign key to BusinessEntity.BusinessEntityID.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: BusinessEntityID
  dataType: INT
  maxLengthBytes: 4
  precision: 10
  scale: 0
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: 
  script: ""
- type: TableColumn
  id: table.person.businessentityaddress.column.addressid
  description: Primary key. Foreign key to Address.AddressID.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: AddressID
  dataType: INT
  maxLengthBytes: 4
  precision: 10
  scale: 0
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: 
  script: ""
- type: TableColumn
  id: table.person.businessentityaddress.column.addresstypeid
  description: Primary key. Foreign key to AddressType.AddressTypeID.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: AddressTypeID
  dataType: INT
  maxLengthBytes: 4
  precision: 10
  scale: 0
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: 
  script: ""
- type: TableColumn
  id: table.person.businessentityaddress.column.rowguid
  description: ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: rowguid
  dataType: UNIQUEIDENTIFIER
  maxLengthBytes: 16
  precision: 0
  scale: 0
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: (newid())
  script: ""
- type: TableColumn
  id: table.person.businessentityaddress.column.modifieddate
  description: Date and time the record was last updated.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: ModifiedDate
  dataType: DATETIME
  maxLengthBytes: 8
  precision: 23
  scale: 3
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: (getdate())
  script: ""
script: |+
  SET ANSI_NULLS ON
  GO

  SET QUOTED_IDENTIFIER ON
  GO

  CREATE TABLE [Person].[BusinessEntityAddress](
  	[BusinessEntityID] [int] NOT NULL,
  	[AddressID] [int] NOT NULL,
  	[AddressTypeID] [int] NOT NULL,
  	[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,
  	[ModifiedDate] [datetime] NOT NULL,
   CONSTRAINT [PK_BusinessEntityAddress_BusinessEntityID_AddressID_AddressTypeID] PRIMARY KEY CLUSTERED
  (
  	[BusinessEntityID] ASC,
  	[AddressID] ASC,
  	[AddressTypeID] ASC
  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
  ) ON [PRIMARY]

  GO

  CREATE UNIQUE NONCLUSTERED INDEX [AK_BusinessEntityAddress_rowguid] ON [Person].[BusinessEntityAddress]
  (
  	[rowguid] ASC
  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
  GO

  CREATE NONCLUSTERED INDEX [IX_BusinessEntityAddress_AddressID] ON [Person].[BusinessEntityAddress]
  (
  	[AddressID] ASC
  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
  GO

  CREATE NONCLUSTERED INDEX [IX_BusinessEntityAddress_AddressTypeID] ON [Person].[BusinessEntityAddress]
  (
  	[AddressTypeID] ASC
  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
  GO

  ALTER TABLE [Person].[BusinessEntityAddress] ADD  CONSTRAINT [DF_BusinessEntityAddress_rowguid]  DEFAULT (newid()) FOR [rowguid]
  GO

  ALTER TABLE [Person].[BusinessEntityAddress] ADD  CONSTRAINT [DF_BusinessEntityAddress_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]
  GO

  ALTER TABLE [Person].[BusinessEntityAddress]  WITH CHECK ADD  CONSTRAINT [FK_BusinessEntityAddress_Address_AddressID] FOREIGN KEY([AddressID])
  REFERENCES [Person].[Address] ([AddressID])
  GO

  ALTER TABLE [Person].[BusinessEntityAddress] CHECK CONSTRAINT [FK_BusinessEntityAddress_Address_AddressID]
  GO

  ALTER TABLE [Person].[BusinessEntityAddress]  WITH CHECK ADD  CONSTRAINT [FK_BusinessEntityAddress_AddressType_AddressTypeID] FOREIGN KEY([AddressTypeID])
  REFERENCES [Person].[AddressType] ([AddressTypeID])
  GO

  ALTER TABLE [Person].[BusinessEntityAddress] CHECK CONSTRAINT [FK_BusinessEntityAddress_AddressType_AddressTypeID]
  GO

  ALTER TABLE [Person].[BusinessEntityAddress]  WITH CHECK ADD  CONSTRAINT [FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID] FOREIGN KEY([BusinessEntityID])
  REFERENCES [Person].[BusinessEntity] ([BusinessEntityID])
  GO

  ALTER TABLE [Person].[BusinessEntityAddress] CHECK CONSTRAINT [FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID]
  GO

