### YamlMime:DocDB
type: Table
id: table.sales.salesorderheader
description: General sales order information.
createdAt: 2023-05-08T12:07:29.5530000
lastModifiedAt: 2023-05-08T12:07:39.4330000
name: Sales.SalesOrderHeader
foreignKeys:
- type: ForeignKey
  id: table.sales.salesorderheader.foreignkey.fk_salesorderheader_address_billtoaddressid
  description: Foreign key constraint referencing Address.AddressID.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: FK_SalesOrderHeader_Address_BillToAddressID
  columns:
  - name: BillToAddressID
    id: table.sales.salesorderheader.column.billtoaddressid
    type: TableColumnRef
  isChecked: true
  referencedKey: PK_Address_AddressID
  referencedTable:
    name: '[Person].[Address]'
    id: table.person.address
    type: TableRef
  deleteAction: 
  updateAction: 
  script: |+
    ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_Address_BillToAddressID] FOREIGN KEY([BillToAddressID])
    REFERENCES [Person].[Address] ([AddressID])
    GO

    ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_Address_BillToAddressID]
    GO

- type: ForeignKey
  id: table.sales.salesorderheader.foreignkey.fk_salesorderheader_address_shiptoaddressid
  description: Foreign key constraint referencing Address.AddressID.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: FK_SalesOrderHeader_Address_ShipToAddressID
  columns:
  - name: ShipToAddressID
    id: table.sales.salesorderheader.column.shiptoaddressid
    type: TableColumnRef
  isChecked: true
  referencedKey: PK_Address_AddressID
  referencedTable:
    name: '[Person].[Address]'
    id: table.person.address
    type: TableRef
  deleteAction: 
  updateAction: 
  script: |+
    ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_Address_ShipToAddressID] FOREIGN KEY([ShipToAddressID])
    REFERENCES [Person].[Address] ([AddressID])
    GO

    ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_Address_ShipToAddressID]
    GO

- type: ForeignKey
  id: table.sales.salesorderheader.foreignkey.fk_salesorderheader_creditcard_creditcardid
  description: Foreign key constraint referencing CreditCard.CreditCardID.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: FK_SalesOrderHeader_CreditCard_CreditCardID
  columns:
  - name: CreditCardID
    id: table.sales.salesorderheader.column.creditcardid
    type: TableColumnRef
  isChecked: true
  referencedKey: PK_CreditCard_CreditCardID
  referencedTable:
    name: '[Sales].[CreditCard]'
    id: table.sales.creditcard
    type: TableRef
  deleteAction: 
  updateAction: 
  script: |+
    ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_CreditCard_CreditCardID] FOREIGN KEY([CreditCardID])
    REFERENCES [Sales].[CreditCard] ([CreditCardID])
    GO

    ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_CreditCard_CreditCardID]
    GO

- type: ForeignKey
  id: table.sales.salesorderheader.foreignkey.fk_salesorderheader_currencyrate_currencyrateid
  description: Foreign key constraint referencing CurrencyRate.CurrencyRateID.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: FK_SalesOrderHeader_CurrencyRate_CurrencyRateID
  columns:
  - name: CurrencyRateID
    id: table.sales.salesorderheader.column.currencyrateid
    type: TableColumnRef
  isChecked: true
  referencedKey: PK_CurrencyRate_CurrencyRateID
  referencedTable:
    name: '[Sales].[CurrencyRate]'
    id: table.sales.currencyrate
    type: TableRef
  deleteAction: 
  updateAction: 
  script: |+
    ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_CurrencyRate_CurrencyRateID] FOREIGN KEY([CurrencyRateID])
    REFERENCES [Sales].[CurrencyRate] ([CurrencyRateID])
    GO

    ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_CurrencyRate_CurrencyRateID]
    GO

- type: ForeignKey
  id: table.sales.salesorderheader.foreignkey.fk_salesorderheader_customer_customerid
  description: Foreign key constraint referencing Customer.CustomerID.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: FK_SalesOrderHeader_Customer_CustomerID
  columns:
  - name: CustomerID
    id: table.sales.salesorderheader.column.customerid
    type: TableColumnRef
  isChecked: true
  referencedKey: PK_Customer_CustomerID
  referencedTable:
    name: '[Sales].[Customer]'
    id: table.sales.customer
    type: TableRef
  deleteAction: 
  updateAction: 
  script: |+
    ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_Customer_CustomerID] FOREIGN KEY([CustomerID])
    REFERENCES [Sales].[Customer] ([CustomerID])
    GO

    ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_Customer_CustomerID]
    GO

- type: ForeignKey
  id: table.sales.salesorderheader.foreignkey.fk_salesorderheader_salesperson_salespersonid
  description: Foreign key constraint referencing SalesPerson.SalesPersonID.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: FK_SalesOrderHeader_SalesPerson_SalesPersonID
  columns:
  - name: SalesPersonID
    id: table.sales.salesorderheader.column.salespersonid
    type: TableColumnRef
  isChecked: true
  referencedKey: PK_SalesPerson_BusinessEntityID
  referencedTable:
    name: '[Sales].[SalesPerson]'
    id: table.sales.salesperson
    type: TableRef
  deleteAction: 
  updateAction: 
  script: |+
    ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_SalesPerson_SalesPersonID] FOREIGN KEY([SalesPersonID])
    REFERENCES [Sales].[SalesPerson] ([BusinessEntityID])
    GO

    ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_SalesPerson_SalesPersonID]
    GO

- type: ForeignKey
  id: table.sales.salesorderheader.foreignkey.fk_salesorderheader_salesterritory_territoryid
  description: Foreign key constraint referencing SalesTerritory.TerritoryID.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: FK_SalesOrderHeader_SalesTerritory_TerritoryID
  columns:
  - name: TerritoryID
    id: table.sales.salesorderheader.column.territoryid
    type: TableColumnRef
  isChecked: true
  referencedKey: PK_SalesTerritory_TerritoryID
  referencedTable:
    name: '[Sales].[SalesTerritory]'
    id: table.sales.salesterritory
    type: TableRef
  deleteAction: 
  updateAction: 
  script: |+
    ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_SalesTerritory_TerritoryID] FOREIGN KEY([TerritoryID])
    REFERENCES [Sales].[SalesTerritory] ([TerritoryID])
    GO

    ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_SalesTerritory_TerritoryID]
    GO

- type: ForeignKey
  id: table.sales.salesorderheader.foreignkey.fk_salesorderheader_shipmethod_shipmethodid
  description: Foreign key constraint referencing ShipMethod.ShipMethodID.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: FK_SalesOrderHeader_ShipMethod_ShipMethodID
  columns:
  - name: ShipMethodID
    id: table.sales.salesorderheader.column.shipmethodid
    type: TableColumnRef
  isChecked: true
  referencedKey: PK_ShipMethod_ShipMethodID
  referencedTable:
    name: '[Purchasing].[ShipMethod]'
    id: table.purchasing.shipmethod
    type: TableRef
  deleteAction: 
  updateAction: 
  script: |+
    ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_ShipMethod_ShipMethodID] FOREIGN KEY([ShipMethodID])
    REFERENCES [Purchasing].[ShipMethod] ([ShipMethodID])
    GO

    ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_ShipMethod_ShipMethodID]
    GO

checks:
- type: CheckConstraint
  id: table.sales.salesorderheader.check.ck_salesorderheader_duedate
  description: Check constraint [DueDate] >= [OrderDate]
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: CK_SalesOrderHeader_DueDate
  isChecked: true
  isEnabled: true
  constraintText: ([DueDate]>=[OrderDate])
  script: |+
    ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderHeader_DueDate] CHECK  (([DueDate]>=[OrderDate]))
    GO

    ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [CK_SalesOrderHeader_DueDate]
    GO

- type: CheckConstraint
  id: table.sales.salesorderheader.check.ck_salesorderheader_freight
  description: Check constraint [Freight] >= (0.00)
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: CK_SalesOrderHeader_Freight
  isChecked: true
  isEnabled: true
  constraintText: ([Freight]>=(0.00))
  script: |+
    ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderHeader_Freight] CHECK  (([Freight]>=(0.00)))
    GO

    ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [CK_SalesOrderHeader_Freight]
    GO

- type: CheckConstraint
  id: table.sales.salesorderheader.check.ck_salesorderheader_shipdate
  description: Check constraint [ShipDate] >= [OrderDate] OR [ShipDate] IS NULL
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: CK_SalesOrderHeader_ShipDate
  isChecked: true
  isEnabled: true
  constraintText: ([ShipDate]>=[OrderDate] OR [ShipDate] IS NULL)
  script: |+
    ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderHeader_ShipDate] CHECK  (([ShipDate]>=[OrderDate] OR [ShipDate] IS NULL))
    GO

    ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [CK_SalesOrderHeader_ShipDate]
    GO

- type: CheckConstraint
  id: table.sales.salesorderheader.check.ck_salesorderheader_status
  description: Check constraint [Status] BETWEEN (0) AND (8)
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: CK_SalesOrderHeader_Status
  isChecked: true
  isEnabled: true
  constraintText: ([Status]>=(0) AND [Status]<=(8))
  script: |+
    ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderHeader_Status] CHECK  (([Status]>=(0) AND [Status]<=(8)))
    GO

    ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [CK_SalesOrderHeader_Status]
    GO

- type: CheckConstraint
  id: table.sales.salesorderheader.check.ck_salesorderheader_subtotal
  description: Check constraint [SubTotal] >= (0.00)
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: CK_SalesOrderHeader_SubTotal
  isChecked: true
  isEnabled: true
  constraintText: ([SubTotal]>=(0.00))
  script: |+
    ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderHeader_SubTotal] CHECK  (([SubTotal]>=(0.00)))
    GO

    ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [CK_SalesOrderHeader_SubTotal]
    GO

- type: CheckConstraint
  id: table.sales.salesorderheader.check.ck_salesorderheader_taxamt
  description: Check constraint [TaxAmt] >= (0.00)
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: CK_SalesOrderHeader_TaxAmt
  isChecked: true
  isEnabled: true
  constraintText: ([TaxAmt]>=(0.00))
  script: |+
    ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderHeader_TaxAmt] CHECK  (([TaxAmt]>=(0.00)))
    GO

    ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [CK_SalesOrderHeader_TaxAmt]
    GO

partitionInfo:
  isPartitioned: false
  columns: []
  partitionScheme: 
  fileGroup: 
indexes: []
triggers:
- type: DmlTrigger
  id: table.sales.salesorderheader.trigger.usalesorderheader
  description: AFTER UPDATE trigger that updates the RevisionNumber and ModifiedDate columns in the SalesOrderHeader table.Updates the SalesYTD column in the SalesPerson and SalesTerritory tables.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: uSalesOrderHeader
  isEnabled: true
  isSchemaBound: false
  isInsteadOf: false
  onDelete: false
  onUpdate: true
  onInsert: false
  script: |+
    SET ANSI_NULLS ON
    GO

    SET QUOTED_IDENTIFIER ON
    GO

    CREATE TRIGGER [Sales].[uSalesOrderHeader] ON [Sales].[SalesOrderHeader]
    AFTER UPDATE NOT FOR REPLICATION AS
    BEGIN
        DECLARE @Count int;

        SET @Count = @@ROWCOUNT;
        IF @Count = 0
            RETURN;

        SET NOCOUNT ON;

        BEGIN TRY
            -- Update RevisionNumber for modification of any field EXCEPT the Status.
            IF NOT UPDATE([Status])
            BEGIN
                UPDATE [Sales].[SalesOrderHeader]
                SET [Sales].[SalesOrderHeader].[RevisionNumber] =
                    [Sales].[SalesOrderHeader].[RevisionNumber] + 1
                WHERE [Sales].[SalesOrderHeader].[SalesOrderID] IN
                    (SELECT inserted.[SalesOrderID] FROM inserted);
            END;

            -- Update the SalesPerson SalesYTD when SubTotal is updated
            IF UPDATE([SubTotal])
            BEGIN
                DECLARE @StartDate datetime,
                        @EndDate datetime

                SET @StartDate = [dbo].[ufnGetAccountingStartDate]();
                SET @EndDate = [dbo].[ufnGetAccountingEndDate]();

                UPDATE [Sales].[SalesPerson]
                SET [Sales].[SalesPerson].[SalesYTD] =
                    (SELECT SUM([Sales].[SalesOrderHeader].[SubTotal])
                    FROM [Sales].[SalesOrderHeader]
                    WHERE [Sales].[SalesPerson].[BusinessEntityID] = [Sales].[SalesOrderHeader].[SalesPersonID]
                        AND ([Sales].[SalesOrderHeader].[Status] = 5) -- Shipped
                        AND [Sales].[SalesOrderHeader].[OrderDate] BETWEEN @StartDate AND @EndDate)
                WHERE [Sales].[SalesPerson].[BusinessEntityID]
                    IN (SELECT DISTINCT inserted.[SalesPersonID] FROM inserted
                        WHERE inserted.[OrderDate] BETWEEN @StartDate AND @EndDate);

                -- Update the SalesTerritory SalesYTD when SubTotal is updated
                UPDATE [Sales].[SalesTerritory]
                SET [Sales].[SalesTerritory].[SalesYTD] =
                    (SELECT SUM([Sales].[SalesOrderHeader].[SubTotal])
                    FROM [Sales].[SalesOrderHeader]
                    WHERE [Sales].[SalesTerritory].[TerritoryID] = [Sales].[SalesOrderHeader].[TerritoryID]
                        AND ([Sales].[SalesOrderHeader].[Status] = 5) -- Shipped
                        AND [Sales].[SalesOrderHeader].[OrderDate] BETWEEN @StartDate AND @EndDate)
                WHERE [Sales].[SalesTerritory].[TerritoryID]
                    IN (SELECT DISTINCT inserted.[TerritoryID] FROM inserted
                        WHERE inserted.[OrderDate] BETWEEN @StartDate AND @EndDate);
            END;
        END TRY
        BEGIN CATCH
            EXECUTE [dbo].[uspPrintError];

            -- Rollback any active or uncommittable transactions before
            -- inserting information in the ErrorLog
            IF @@TRANCOUNT > 0
            BEGIN
                ROLLBACK TRANSACTION;
            END

            EXECUTE [dbo].[uspLogError];
        END CATCH;
    END;

    GO

    ALTER TABLE [Sales].[SalesOrderHeader] ENABLE TRIGGER [uSalesOrderHeader]
    GO

columns:
- type: TableColumn
  id: table.sales.salesorderheader.column.salesorderid
  description: Primary key.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: SalesOrderID
  dataType: INT
  maxLengthBytes: 4
  precision: 10
  scale: 0
  isNullable: false
  isComputed: false
  computedText: ''
  isIdentity: true
  identityIncrement: 1
  identitySeed: 1
  inPrimaryKey: true
  isForeignKey: false
  foreignKeys: []
  default: 
  collation: ''
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.sales.salesorderheader.column.revisionnumber
  description: Incremental number to track changes to the sales order over time.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: RevisionNumber
  dataType: TINYINT
  maxLengthBytes: 1
  precision: 3
  scale: 0
  isNullable: false
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  foreignKeys: []
  default: ((0))
  collation: ''
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.sales.salesorderheader.column.orderdate
  description: Dates the sales order was created.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: OrderDate
  dataType: DATETIME
  maxLengthBytes: 8
  precision: 23
  scale: 3
  isNullable: false
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  foreignKeys: []
  default: (getdate())
  collation: ''
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.sales.salesorderheader.column.duedate
  description: Date the order is due to the customer.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: DueDate
  dataType: DATETIME
  maxLengthBytes: 8
  precision: 23
  scale: 3
  isNullable: false
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  foreignKeys: []
  default: 
  collation: ''
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.sales.salesorderheader.column.shipdate
  description: Date the order was shipped to the customer.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: ShipDate
  dataType: DATETIME
  maxLengthBytes: 8
  precision: 23
  scale: 3
  isNullable: true
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  foreignKeys: []
  default: 
  collation: ''
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.sales.salesorderheader.column.status
  description: Order current status. 1 = In process; 2 = Approved; 3 = Backordered; 4 = Rejected; 5 = Shipped; 6 = Cancelled
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: Status
  dataType: TINYINT
  maxLengthBytes: 1
  precision: 3
  scale: 0
  isNullable: false
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  foreignKeys: []
  default: ((1))
  collation: ''
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.sales.salesorderheader.column.onlineorderflag
  description: 0 = Order placed by sales person. 1 = Order placed online by customer.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: OnlineOrderFlag
  dataType: FLAG
  maxLengthBytes: 1
  precision: 1
  scale: 0
  isNullable: false
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  foreignKeys: []
  default: ((1))
  collation: ''
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.sales.salesorderheader.column.salesordernumber
  description: Unique sales order identification number.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: SalesOrderNumber
  dataType: NVARCHAR(25)
  maxLengthBytes: 25
  precision: 0
  scale: 0
  isNullable: false
  isComputed: true
  computedText: (isnull(N'SO'+CONVERT([nvarchar](23),[SalesOrderID]),N'*** ERROR ***'))
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  foreignKeys: []
  default: 
  collation: SQL_Latin1_General_CP1_CI_AS
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.sales.salesorderheader.column.purchaseordernumber
  description: 'Customer purchase order number reference. '
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: PurchaseOrderNumber
  dataType: ORDERNUMBER
  maxLengthBytes: 25
  precision: 0
  scale: 0
  isNullable: true
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  foreignKeys: []
  default: 
  collation: SQL_Latin1_General_CP1_CI_AS
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.sales.salesorderheader.column.accountnumber
  description: Financial accounting number reference.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: AccountNumber
  dataType: ACCOUNTNUMBER
  maxLengthBytes: 15
  precision: 0
  scale: 0
  isNullable: true
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  foreignKeys: []
  default: 
  collation: SQL_Latin1_General_CP1_CI_AS
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.sales.salesorderheader.column.customerid
  description: Customer identification number. Foreign key to Customer.BusinessEntityID.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: CustomerID
  dataType: INT
  maxLengthBytes: 4
  precision: 10
  scale: 0
  isNullable: false
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: true
  foreignKeys:
  - name: FK_SalesOrderHeader_Customer_CustomerID
    id: table.sales.salesorderheader.foreignkey.fk_salesorderheader_customer_customerid
    type: ForeignKeyRef
  default: 
  collation: ''
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.sales.salesorderheader.column.salespersonid
  description: Sales person who created the sales order. Foreign key to SalesPerson.BusinessEntityID.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: SalesPersonID
  dataType: INT
  maxLengthBytes: 4
  precision: 10
  scale: 0
  isNullable: true
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: true
  foreignKeys:
  - name: FK_SalesOrderHeader_SalesPerson_SalesPersonID
    id: table.sales.salesorderheader.foreignkey.fk_salesorderheader_salesperson_salespersonid
    type: ForeignKeyRef
  default: 
  collation: ''
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.sales.salesorderheader.column.territoryid
  description: Territory in which the sale was made. Foreign key to SalesTerritory.SalesTerritoryID.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: TerritoryID
  dataType: INT
  maxLengthBytes: 4
  precision: 10
  scale: 0
  isNullable: true
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: true
  foreignKeys:
  - name: FK_SalesOrderHeader_SalesTerritory_TerritoryID
    id: table.sales.salesorderheader.foreignkey.fk_salesorderheader_salesterritory_territoryid
    type: ForeignKeyRef
  default: 
  collation: ''
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.sales.salesorderheader.column.billtoaddressid
  description: Customer billing address. Foreign key to Address.AddressID.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: BillToAddressID
  dataType: INT
  maxLengthBytes: 4
  precision: 10
  scale: 0
  isNullable: false
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: true
  foreignKeys:
  - name: FK_SalesOrderHeader_Address_BillToAddressID
    id: table.sales.salesorderheader.foreignkey.fk_salesorderheader_address_billtoaddressid
    type: ForeignKeyRef
  default: 
  collation: ''
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.sales.salesorderheader.column.shiptoaddressid
  description: Customer shipping address. Foreign key to Address.AddressID.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: ShipToAddressID
  dataType: INT
  maxLengthBytes: 4
  precision: 10
  scale: 0
  isNullable: false
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: true
  foreignKeys:
  - name: FK_SalesOrderHeader_Address_ShipToAddressID
    id: table.sales.salesorderheader.foreignkey.fk_salesorderheader_address_shiptoaddressid
    type: ForeignKeyRef
  default: 
  collation: ''
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.sales.salesorderheader.column.shipmethodid
  description: Shipping method. Foreign key to ShipMethod.ShipMethodID.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: ShipMethodID
  dataType: INT
  maxLengthBytes: 4
  precision: 10
  scale: 0
  isNullable: false
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: true
  foreignKeys:
  - name: FK_SalesOrderHeader_ShipMethod_ShipMethodID
    id: table.sales.salesorderheader.foreignkey.fk_salesorderheader_shipmethod_shipmethodid
    type: ForeignKeyRef
  default: 
  collation: ''
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.sales.salesorderheader.column.creditcardid
  description: Credit card identification number. Foreign key to CreditCard.CreditCardID.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: CreditCardID
  dataType: INT
  maxLengthBytes: 4
  precision: 10
  scale: 0
  isNullable: true
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: true
  foreignKeys:
  - name: FK_SalesOrderHeader_CreditCard_CreditCardID
    id: table.sales.salesorderheader.foreignkey.fk_salesorderheader_creditcard_creditcardid
    type: ForeignKeyRef
  default: 
  collation: ''
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.sales.salesorderheader.column.creditcardapprovalcode
  description: Approval code provided by the credit card company.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: CreditCardApprovalCode
  dataType: VARCHAR(15)
  maxLengthBytes: 15
  precision: 0
  scale: 0
  isNullable: true
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  foreignKeys: []
  default: 
  collation: SQL_Latin1_General_CP1_CI_AS
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.sales.salesorderheader.column.currencyrateid
  description: Currency exchange rate used. Foreign key to CurrencyRate.CurrencyRateID.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: CurrencyRateID
  dataType: INT
  maxLengthBytes: 4
  precision: 10
  scale: 0
  isNullable: true
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: true
  foreignKeys:
  - name: FK_SalesOrderHeader_CurrencyRate_CurrencyRateID
    id: table.sales.salesorderheader.foreignkey.fk_salesorderheader_currencyrate_currencyrateid
    type: ForeignKeyRef
  default: 
  collation: ''
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.sales.salesorderheader.column.subtotal
  description: Sales subtotal. Computed as SUM(SalesOrderDetail.LineTotal)for the appropriate SalesOrderID.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: SubTotal
  dataType: MONEY
  maxLengthBytes: 8
  precision: 19
  scale: 4
  isNullable: false
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  foreignKeys: []
  default: ((0.00))
  collation: ''
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.sales.salesorderheader.column.taxamt
  description: Tax amount.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: TaxAmt
  dataType: MONEY
  maxLengthBytes: 8
  precision: 19
  scale: 4
  isNullable: false
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  foreignKeys: []
  default: ((0.00))
  collation: ''
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.sales.salesorderheader.column.freight
  description: Shipping cost.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: Freight
  dataType: MONEY
  maxLengthBytes: 8
  precision: 19
  scale: 4
  isNullable: false
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  foreignKeys: []
  default: ((0.00))
  collation: ''
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.sales.salesorderheader.column.totaldue
  description: Total due from customer. Computed as Subtotal + TaxAmt + Freight.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: TotalDue
  dataType: MONEY
  maxLengthBytes: 8
  precision: 19
  scale: 4
  isNullable: false
  isComputed: true
  computedText: (isnull(([SubTotal]+[TaxAmt])+[Freight],(0)))
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  foreignKeys: []
  default: 
  collation: ''
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.sales.salesorderheader.column.comment
  description: Sales representative comments.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: Comment
  dataType: NVARCHAR(128)
  maxLengthBytes: 128
  precision: 0
  scale: 0
  isNullable: true
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  foreignKeys: []
  default: 
  collation: SQL_Latin1_General_CP1_CI_AS
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.sales.salesorderheader.column.rowguid
  description: ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: rowguid
  dataType: UNIQUEIDENTIFIER
  maxLengthBytes: 16
  precision: 0
  scale: 0
  isNullable: false
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  foreignKeys: []
  default: (newid())
  collation: ''
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.sales.salesorderheader.column.modifieddate
  description: Date and time the record was last updated.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: ModifiedDate
  dataType: DATETIME
  maxLengthBytes: 8
  precision: 23
  scale: 3
  isNullable: false
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  foreignKeys: []
  default: (getdate())
  collation: ''
  isFileStream: false
  isFullTextIndexed: false
  script: ""
script: |+
  SET ANSI_NULLS ON
  GO

  SET QUOTED_IDENTIFIER ON
  GO

  CREATE TABLE [Sales].[SalesOrderHeader](
  	[SalesOrderID] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
  	[RevisionNumber] [tinyint] NOT NULL,
  	[OrderDate] [datetime] NOT NULL,
  	[DueDate] [datetime] NOT NULL,
  	[ShipDate] [datetime] NULL,
  	[Status] [tinyint] NOT NULL,
  	[OnlineOrderFlag] [dbo].[Flag] NOT NULL,
  	[SalesOrderNumber]  AS (isnull(N'SO'+CONVERT([nvarchar](23),[SalesOrderID]),N'*** ERROR ***')),
  	[PurchaseOrderNumber] [dbo].[OrderNumber] NULL,
  	[AccountNumber] [dbo].[AccountNumber] NULL,
  	[CustomerID] [int] NOT NULL,
  	[SalesPersonID] [int] NULL,
  	[TerritoryID] [int] NULL,
  	[BillToAddressID] [int] NOT NULL,
  	[ShipToAddressID] [int] NOT NULL,
  	[ShipMethodID] [int] NOT NULL,
  	[CreditCardID] [int] NULL,
  	[CreditCardApprovalCode] [varchar](15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
  	[CurrencyRateID] [int] NULL,
  	[SubTotal] [money] NOT NULL,
  	[TaxAmt] [money] NOT NULL,
  	[Freight] [money] NOT NULL,
  	[TotalDue]  AS (isnull(([SubTotal]+[TaxAmt])+[Freight],(0))),
  	[Comment] [nvarchar](128) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
  	[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,
  	[ModifiedDate] [datetime] NOT NULL,
   CONSTRAINT [PK_SalesOrderHeader_SalesOrderID] PRIMARY KEY CLUSTERED
  (
  	[SalesOrderID] ASC
  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
  ) ON [PRIMARY]

  GO

  CREATE UNIQUE NONCLUSTERED INDEX [AK_SalesOrderHeader_rowguid] ON [Sales].[SalesOrderHeader]
  (
  	[rowguid] ASC
  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
  GO

  SET ARITHABORT ON
  SET CONCAT_NULL_YIELDS_NULL ON
  SET QUOTED_IDENTIFIER ON
  SET ANSI_NULLS ON
  SET ANSI_PADDING ON
  SET ANSI_WARNINGS ON
  SET NUMERIC_ROUNDABORT OFF
  GO

  CREATE UNIQUE NONCLUSTERED INDEX [AK_SalesOrderHeader_SalesOrderNumber] ON [Sales].[SalesOrderHeader]
  (
  	[SalesOrderNumber] ASC
  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
  GO

  CREATE NONCLUSTERED INDEX [IX_SalesOrderHeader_CustomerID] ON [Sales].[SalesOrderHeader]
  (
  	[CustomerID] ASC
  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
  GO

  CREATE NONCLUSTERED INDEX [IX_SalesOrderHeader_SalesPersonID] ON [Sales].[SalesOrderHeader]
  (
  	[SalesPersonID] ASC
  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
  GO

  ALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_RevisionNumber]  DEFAULT ((0)) FOR [RevisionNumber]
  GO

  ALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_OrderDate]  DEFAULT (getdate()) FOR [OrderDate]
  GO

  ALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_Status]  DEFAULT ((1)) FOR [Status]
  GO

  ALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_OnlineOrderFlag]  DEFAULT ((1)) FOR [OnlineOrderFlag]
  GO

  ALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_SubTotal]  DEFAULT ((0.00)) FOR [SubTotal]
  GO

  ALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_TaxAmt]  DEFAULT ((0.00)) FOR [TaxAmt]
  GO

  ALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_Freight]  DEFAULT ((0.00)) FOR [Freight]
  GO

  ALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_rowguid]  DEFAULT (newid()) FOR [rowguid]
  GO

  ALTER TABLE [Sales].[SalesOrderHeader] ADD  CONSTRAINT [DF_SalesOrderHeader_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]
  GO

  ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_Address_BillToAddressID] FOREIGN KEY([BillToAddressID])
  REFERENCES [Person].[Address] ([AddressID])
  GO

  ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_Address_BillToAddressID]
  GO

  ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_Address_ShipToAddressID] FOREIGN KEY([ShipToAddressID])
  REFERENCES [Person].[Address] ([AddressID])
  GO

  ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_Address_ShipToAddressID]
  GO

  ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_CreditCard_CreditCardID] FOREIGN KEY([CreditCardID])
  REFERENCES [Sales].[CreditCard] ([CreditCardID])
  GO

  ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_CreditCard_CreditCardID]
  GO

  ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_CurrencyRate_CurrencyRateID] FOREIGN KEY([CurrencyRateID])
  REFERENCES [Sales].[CurrencyRate] ([CurrencyRateID])
  GO

  ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_CurrencyRate_CurrencyRateID]
  GO

  ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_Customer_CustomerID] FOREIGN KEY([CustomerID])
  REFERENCES [Sales].[Customer] ([CustomerID])
  GO

  ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_Customer_CustomerID]
  GO

  ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_SalesPerson_SalesPersonID] FOREIGN KEY([SalesPersonID])
  REFERENCES [Sales].[SalesPerson] ([BusinessEntityID])
  GO

  ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_SalesPerson_SalesPersonID]
  GO

  ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_SalesTerritory_TerritoryID] FOREIGN KEY([TerritoryID])
  REFERENCES [Sales].[SalesTerritory] ([TerritoryID])
  GO

  ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_SalesTerritory_TerritoryID]
  GO

  ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [FK_SalesOrderHeader_ShipMethod_ShipMethodID] FOREIGN KEY([ShipMethodID])
  REFERENCES [Purchasing].[ShipMethod] ([ShipMethodID])
  GO

  ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_ShipMethod_ShipMethodID]
  GO

  ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderHeader_DueDate] CHECK  (([DueDate]>=[OrderDate]))
  GO

  ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [CK_SalesOrderHeader_DueDate]
  GO

  ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderHeader_Freight] CHECK  (([Freight]>=(0.00)))
  GO

  ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [CK_SalesOrderHeader_Freight]
  GO

  ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderHeader_ShipDate] CHECK  (([ShipDate]>=[OrderDate] OR [ShipDate] IS NULL))
  GO

  ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [CK_SalesOrderHeader_ShipDate]
  GO

  ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderHeader_Status] CHECK  (([Status]>=(0) AND [Status]<=(8)))
  GO

  ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [CK_SalesOrderHeader_Status]
  GO

  ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderHeader_SubTotal] CHECK  (([SubTotal]>=(0.00)))
  GO

  ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [CK_SalesOrderHeader_SubTotal]
  GO

  ALTER TABLE [Sales].[SalesOrderHeader]  WITH CHECK ADD  CONSTRAINT [CK_SalesOrderHeader_TaxAmt] CHECK  (([TaxAmt]>=(0.00)))
  GO

  ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [CK_SalesOrderHeader_TaxAmt]
  GO

  SET ANSI_NULLS ON
  GO

  SET QUOTED_IDENTIFIER ON
  GO

  CREATE TRIGGER [Sales].[uSalesOrderHeader] ON [Sales].[SalesOrderHeader]
  AFTER UPDATE NOT FOR REPLICATION AS
  BEGIN
      DECLARE @Count int;

      SET @Count = @@ROWCOUNT;
      IF @Count = 0
          RETURN;

      SET NOCOUNT ON;

      BEGIN TRY
          -- Update RevisionNumber for modification of any field EXCEPT the Status.
          IF NOT UPDATE([Status])
          BEGIN
              UPDATE [Sales].[SalesOrderHeader]
              SET [Sales].[SalesOrderHeader].[RevisionNumber] =
                  [Sales].[SalesOrderHeader].[RevisionNumber] + 1
              WHERE [Sales].[SalesOrderHeader].[SalesOrderID] IN
                  (SELECT inserted.[SalesOrderID] FROM inserted);
          END;

          -- Update the SalesPerson SalesYTD when SubTotal is updated
          IF UPDATE([SubTotal])
          BEGIN
              DECLARE @StartDate datetime,
                      @EndDate datetime

              SET @StartDate = [dbo].[ufnGetAccountingStartDate]();
              SET @EndDate = [dbo].[ufnGetAccountingEndDate]();

              UPDATE [Sales].[SalesPerson]
              SET [Sales].[SalesPerson].[SalesYTD] =
                  (SELECT SUM([Sales].[SalesOrderHeader].[SubTotal])
                  FROM [Sales].[SalesOrderHeader]
                  WHERE [Sales].[SalesPerson].[BusinessEntityID] = [Sales].[SalesOrderHeader].[SalesPersonID]
                      AND ([Sales].[SalesOrderHeader].[Status] = 5) -- Shipped
                      AND [Sales].[SalesOrderHeader].[OrderDate] BETWEEN @StartDate AND @EndDate)
              WHERE [Sales].[SalesPerson].[BusinessEntityID]
                  IN (SELECT DISTINCT inserted.[SalesPersonID] FROM inserted
                      WHERE inserted.[OrderDate] BETWEEN @StartDate AND @EndDate);

              -- Update the SalesTerritory SalesYTD when SubTotal is updated
              UPDATE [Sales].[SalesTerritory]
              SET [Sales].[SalesTerritory].[SalesYTD] =
                  (SELECT SUM([Sales].[SalesOrderHeader].[SubTotal])
                  FROM [Sales].[SalesOrderHeader]
                  WHERE [Sales].[SalesTerritory].[TerritoryID] = [Sales].[SalesOrderHeader].[TerritoryID]
                      AND ([Sales].[SalesOrderHeader].[Status] = 5) -- Shipped
                      AND [Sales].[SalesOrderHeader].[OrderDate] BETWEEN @StartDate AND @EndDate)
              WHERE [Sales].[SalesTerritory].[TerritoryID]
                  IN (SELECT DISTINCT inserted.[TerritoryID] FROM inserted
                      WHERE inserted.[OrderDate] BETWEEN @StartDate AND @EndDate);
          END;
      END TRY
      BEGIN CATCH
          EXECUTE [dbo].[uspPrintError];

          -- Rollback any active or uncommittable transactions before
          -- inserting information in the ErrorLog
          IF @@TRANCOUNT > 0
          BEGIN
              ROLLBACK TRANSACTION;
          END

          EXECUTE [dbo].[uspLogError];
      END CATCH;
  END;

  GO

  ALTER TABLE [Sales].[SalesOrderHeader] ENABLE TRIGGER [uSalesOrderHeader]
  GO

