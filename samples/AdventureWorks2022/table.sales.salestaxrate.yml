### YamlMime:DocDB
type: Table
id: table.sales.salestaxrate
description: Tax rate lookup table.
createdAt: 2023-05-08T12:07:29.5730000
lastModifiedAt: 2023-05-08T12:07:39.2430000
name: Sales.SalesTaxRate
foreignKeys: []
checks: []
partitionInfo:
  isPartitioned: false
  columns: []
  partitionScheme: 
  fileGroup: 
title: 
indexes: []
columns:
- type: TableColumn
  id: table.sales.salestaxrate.column.salestaxrateid
  description: Primary key for SalesTaxRate records.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: SalesTaxRateID
  dataType: INT
  maxLengthBytes: 4
  precision: 10
  scale: 0
  isComputed: false
  computedText: ''
  isIdentity: true
  identityIncrement: 1
  identitySeed: 1
  inPrimaryKey: false
  isForeignKey: false
  default: 
  script: ""
- type: TableColumn
  id: table.sales.salestaxrate.column.stateprovinceid
  description: State, province, or country/region the sales tax applies to.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: StateProvinceID
  dataType: INT
  maxLengthBytes: 4
  precision: 10
  scale: 0
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: 
  script: ""
- type: TableColumn
  id: table.sales.salestaxrate.column.taxtype
  description: 1 = Tax applied to retail transactions, 2 = Tax applied to wholesale transactions, 3 = Tax applied to all sales (retail and wholesale) transactions.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: TaxType
  dataType: TINYINT
  maxLengthBytes: 1
  precision: 3
  scale: 0
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: 
  script: ""
- type: TableColumn
  id: table.sales.salestaxrate.column.taxrate
  description: Tax rate amount.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: TaxRate
  dataType: SMALLMONEY
  maxLengthBytes: 4
  precision: 10
  scale: 4
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: ((0.00))
  script: ""
- type: TableColumn
  id: table.sales.salestaxrate.column.name
  description: Tax rate description.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: Name
  dataType: NAME
  maxLengthBytes: 50
  precision: 0
  scale: 0
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: 
  script: ""
- type: TableColumn
  id: table.sales.salestaxrate.column.rowguid
  description: ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: rowguid
  dataType: UNIQUEIDENTIFIER
  maxLengthBytes: 16
  precision: 0
  scale: 0
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: (newid())
  script: ""
- type: TableColumn
  id: table.sales.salestaxrate.column.modifieddate
  description: Date and time the record was last updated.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: ModifiedDate
  dataType: DATETIME
  maxLengthBytes: 8
  precision: 23
  scale: 3
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: (getdate())
  script: ""
script: |+
  SET ANSI_NULLS ON
  GO

  SET QUOTED_IDENTIFIER ON
  GO

  CREATE TABLE [Sales].[SalesTaxRate](
  	[SalesTaxRateID] [int] IDENTITY(1,1) NOT NULL,
  	[StateProvinceID] [int] NOT NULL,
  	[TaxType] [tinyint] NOT NULL,
  	[TaxRate] [smallmoney] NOT NULL,
  	[Name] [dbo].[Name] NOT NULL,
  	[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,
  	[ModifiedDate] [datetime] NOT NULL,
   CONSTRAINT [PK_SalesTaxRate_SalesTaxRateID] PRIMARY KEY CLUSTERED
  (
  	[SalesTaxRateID] ASC
  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
  ) ON [PRIMARY]

  GO

  CREATE UNIQUE NONCLUSTERED INDEX [AK_SalesTaxRate_rowguid] ON [Sales].[SalesTaxRate]
  (
  	[rowguid] ASC
  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
  GO

  CREATE UNIQUE NONCLUSTERED INDEX [AK_SalesTaxRate_StateProvinceID_TaxType] ON [Sales].[SalesTaxRate]
  (
  	[StateProvinceID] ASC,
  	[TaxType] ASC
  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
  GO

  ALTER TABLE [Sales].[SalesTaxRate] ADD  CONSTRAINT [DF_SalesTaxRate_TaxRate]  DEFAULT ((0.00)) FOR [TaxRate]
  GO

  ALTER TABLE [Sales].[SalesTaxRate] ADD  CONSTRAINT [DF_SalesTaxRate_rowguid]  DEFAULT (newid()) FOR [rowguid]
  GO

  ALTER TABLE [Sales].[SalesTaxRate] ADD  CONSTRAINT [DF_SalesTaxRate_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]
  GO

  ALTER TABLE [Sales].[SalesTaxRate]  WITH CHECK ADD  CONSTRAINT [FK_SalesTaxRate_StateProvince_StateProvinceID] FOREIGN KEY([StateProvinceID])
  REFERENCES [Person].[StateProvince] ([StateProvinceID])
  GO

  ALTER TABLE [Sales].[SalesTaxRate] CHECK CONSTRAINT [FK_SalesTaxRate_StateProvince_StateProvinceID]
  GO

  ALTER TABLE [Sales].[SalesTaxRate]  WITH CHECK ADD  CONSTRAINT [CK_SalesTaxRate_TaxType] CHECK  (([TaxType]>=(1) AND [TaxType]<=(3)))
  GO

  ALTER TABLE [Sales].[SalesTaxRate] CHECK CONSTRAINT [CK_SalesTaxRate_TaxType]
  GO

