### YamlMime:DocDB
type: Table
id: table.person.emailaddress
description: Where to send a person email.
createdAt: 2023-05-08T12:07:29.4500000
lastModifiedAt: 2023-05-08T12:07:38.6530000
name: Person.EmailAddress
foreignKeys:
- type: ForeignKey
  id: table.person.emailaddress.foreignkey.fk_emailaddress_person_businessentityid
  description: Foreign key constraint referencing Person.BusinessEntityID.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: FK_EmailAddress_Person_BusinessEntityID
  columns:
  - name: BusinessEntityID
    id: table.person.emailaddress.column.businessentityid
    type: TableColumnRef
  isChecked: true
  referencedKey: PK_Person_BusinessEntityID
  referencedTable:
    name: '[Person].[Person]'
    id: table.person.person
    type: TableRef
  deleteAction: 
  updateAction: 
  script: |+
    ALTER TABLE [Person].[EmailAddress]  WITH CHECK ADD  CONSTRAINT [FK_EmailAddress_Person_BusinessEntityID] FOREIGN KEY([BusinessEntityID])
    REFERENCES [Person].[Person] ([BusinessEntityID])
    GO

    ALTER TABLE [Person].[EmailAddress] CHECK CONSTRAINT [FK_EmailAddress_Person_BusinessEntityID]
    GO

checks: []
partitionInfo:
  isPartitioned: false
  columns: []
  partitionScheme: 
  fileGroup: 
indexes: []
columns:
- type: TableColumn
  id: table.person.emailaddress.column.businessentityid
  description: Primary key. Person associated with this email address.  Foreign key to Person.BusinessEntityID
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: BusinessEntityID
  dataType: INT
  maxLengthBytes: 4
  precision: 10
  scale: 0
  isNullable: false
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: true
  isForeignKey: true
  foreignKeys:
  - name: FK_EmailAddress_Person_BusinessEntityID
    id: table.person.emailaddress.foreignkey.fk_emailaddress_person_businessentityid
    type: ForeignKeyRef
  default: 
  collation: ''
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.person.emailaddress.column.emailaddressid
  description: Primary key. ID of this email address.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: EmailAddressID
  dataType: INT
  maxLengthBytes: 4
  precision: 10
  scale: 0
  isNullable: false
  isComputed: false
  computedText: ''
  isIdentity: true
  identityIncrement: 1
  identitySeed: 1
  inPrimaryKey: true
  isForeignKey: false
  foreignKeys: []
  default: 
  collation: ''
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.person.emailaddress.column.emailaddress
  description: E-mail address for the person.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: EmailAddress
  dataType: NVARCHAR(50)
  maxLengthBytes: 50
  precision: 0
  scale: 0
  isNullable: true
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  foreignKeys: []
  default: 
  collation: SQL_Latin1_General_CP1_CI_AS
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.person.emailaddress.column.rowguid
  description: ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: rowguid
  dataType: UNIQUEIDENTIFIER
  maxLengthBytes: 16
  precision: 0
  scale: 0
  isNullable: false
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  foreignKeys: []
  default: (newid())
  collation: ''
  isFileStream: false
  isFullTextIndexed: false
  script: ""
- type: TableColumn
  id: table.person.emailaddress.column.modifieddate
  description: Date and time the record was last updated.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: ModifiedDate
  dataType: DATETIME
  maxLengthBytes: 8
  precision: 23
  scale: 3
  isNullable: false
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  foreignKeys: []
  default: (getdate())
  collation: ''
  isFileStream: false
  isFullTextIndexed: false
  script: ""
script: |+
  SET ANSI_NULLS ON
  GO

  SET QUOTED_IDENTIFIER ON
  GO

  CREATE TABLE [Person].[EmailAddress](
  	[BusinessEntityID] [int] NOT NULL,
  	[EmailAddressID] [int] IDENTITY(1,1) NOT NULL,
  	[EmailAddress] [nvarchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
  	[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,
  	[ModifiedDate] [datetime] NOT NULL,
   CONSTRAINT [PK_EmailAddress_BusinessEntityID_EmailAddressID] PRIMARY KEY CLUSTERED
  (
  	[BusinessEntityID] ASC,
  	[EmailAddressID] ASC
  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
  ) ON [PRIMARY]

  GO

  SET ANSI_PADDING ON
  GO

  CREATE NONCLUSTERED INDEX [IX_EmailAddress_EmailAddress] ON [Person].[EmailAddress]
  (
  	[EmailAddress] ASC
  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
  GO

  ALTER TABLE [Person].[EmailAddress] ADD  CONSTRAINT [DF_EmailAddress_rowguid]  DEFAULT (newid()) FOR [rowguid]
  GO

  ALTER TABLE [Person].[EmailAddress] ADD  CONSTRAINT [DF_EmailAddress_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]
  GO

  ALTER TABLE [Person].[EmailAddress]  WITH CHECK ADD  CONSTRAINT [FK_EmailAddress_Person_BusinessEntityID] FOREIGN KEY([BusinessEntityID])
  REFERENCES [Person].[Person] ([BusinessEntityID])
  GO

  ALTER TABLE [Person].[EmailAddress] CHECK CONSTRAINT [FK_EmailAddress_Person_BusinessEntityID]
  GO

