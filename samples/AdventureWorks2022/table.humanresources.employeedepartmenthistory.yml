### YamlMime:DocDB
type: Table
id: table.humanresources.employeedepartmenthistory
description: Employee department transfers.
createdAt: 2023-05-08T12:07:29.4600000
lastModifiedAt: 2023-05-08T12:07:38.6800000
name: HumanResources.EmployeeDepartmentHistory
foreignKeys: []
checks: []
partitionInfo:
  isPartitioned: false
  columns: []
  partitionScheme: 
  fileGroup: 
indexes: []
columns:
- type: TableColumn
  id: table.humanresources.employeedepartmenthistory.column.businessentityid
  description: Employee identification number. Foreign key to Employee.BusinessEntityID.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: BusinessEntityID
  dataType: INT
  maxLengthBytes: 4
  precision: 10
  scale: 0
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: 
  script: ""
- type: TableColumn
  id: table.humanresources.employeedepartmenthistory.column.departmentid
  description: Department in which the employee worked including currently. Foreign key to Department.DepartmentID.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: DepartmentID
  dataType: SMALLINT
  maxLengthBytes: 2
  precision: 5
  scale: 0
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: 
  script: ""
- type: TableColumn
  id: table.humanresources.employeedepartmenthistory.column.shiftid
  description: Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: ShiftID
  dataType: TINYINT
  maxLengthBytes: 1
  precision: 3
  scale: 0
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: 
  script: ""
- type: TableColumn
  id: table.humanresources.employeedepartmenthistory.column.startdate
  description: Date the employee started work in the department.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: StartDate
  dataType: DATE
  maxLengthBytes: 3
  precision: 10
  scale: 0
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: 
  script: ""
- type: TableColumn
  id: table.humanresources.employeedepartmenthistory.column.enddate
  description: Date the employee left the department. NULL = Current department.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: EndDate
  dataType: DATE
  maxLengthBytes: 3
  precision: 10
  scale: 0
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: 
  script: ""
- type: TableColumn
  id: table.humanresources.employeedepartmenthistory.column.modifieddate
  description: Date and time the record was last updated.
  createdAt: 0001-01-01T00:00:00.0000000
  lastModifiedAt: 0001-01-01T00:00:00.0000000
  name: ModifiedDate
  dataType: DATETIME
  maxLengthBytes: 8
  precision: 23
  scale: 3
  isComputed: false
  computedText: ''
  isIdentity: false
  identityIncrement: 0
  identitySeed: 0
  inPrimaryKey: false
  isForeignKey: false
  default: (getdate())
  script: ""
script: |+
  SET ANSI_NULLS ON
  GO

  SET QUOTED_IDENTIFIER ON
  GO

  CREATE TABLE [HumanResources].[EmployeeDepartmentHistory](
  	[BusinessEntityID] [int] NOT NULL,
  	[DepartmentID] [smallint] NOT NULL,
  	[ShiftID] [tinyint] NOT NULL,
  	[StartDate] [date] NOT NULL,
  	[EndDate] [date] NULL,
  	[ModifiedDate] [datetime] NOT NULL,
   CONSTRAINT [PK_EmployeeDepartmentHistory_BusinessEntityID_StartDate_DepartmentID] PRIMARY KEY CLUSTERED
  (
  	[BusinessEntityID] ASC,
  	[StartDate] ASC,
  	[DepartmentID] ASC,
  	[ShiftID] ASC
  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
  ) ON [PRIMARY]

  GO

  CREATE NONCLUSTERED INDEX [IX_EmployeeDepartmentHistory_DepartmentID] ON [HumanResources].[EmployeeDepartmentHistory]
  (
  	[DepartmentID] ASC
  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
  GO

  CREATE NONCLUSTERED INDEX [IX_EmployeeDepartmentHistory_ShiftID] ON [HumanResources].[EmployeeDepartmentHistory]
  (
  	[ShiftID] ASC
  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
  GO

  ALTER TABLE [HumanResources].[EmployeeDepartmentHistory] ADD  CONSTRAINT [DF_EmployeeDepartmentHistory_ModifiedDate]  DEFAULT (getdate()) FOR [ModifiedDate]
  GO

  ALTER TABLE [HumanResources].[EmployeeDepartmentHistory]  WITH CHECK ADD  CONSTRAINT [FK_EmployeeDepartmentHistory_Department_DepartmentID] FOREIGN KEY([DepartmentID])
  REFERENCES [HumanResources].[Department] ([DepartmentID])
  GO

  ALTER TABLE [HumanResources].[EmployeeDepartmentHistory] CHECK CONSTRAINT [FK_EmployeeDepartmentHistory_Department_DepartmentID]
  GO

  ALTER TABLE [HumanResources].[EmployeeDepartmentHistory]  WITH CHECK ADD  CONSTRAINT [FK_EmployeeDepartmentHistory_Employee_BusinessEntityID] FOREIGN KEY([BusinessEntityID])
  REFERENCES [HumanResources].[Employee] ([BusinessEntityID])
  GO

  ALTER TABLE [HumanResources].[EmployeeDepartmentHistory] CHECK CONSTRAINT [FK_EmployeeDepartmentHistory_Employee_BusinessEntityID]
  GO

  ALTER TABLE [HumanResources].[EmployeeDepartmentHistory]  WITH CHECK ADD  CONSTRAINT [FK_EmployeeDepartmentHistory_Shift_ShiftID] FOREIGN KEY([ShiftID])
  REFERENCES [HumanResources].[Shift] ([ShiftID])
  GO

  ALTER TABLE [HumanResources].[EmployeeDepartmentHistory] CHECK CONSTRAINT [FK_EmployeeDepartmentHistory_Shift_ShiftID]
  GO

  ALTER TABLE [HumanResources].[EmployeeDepartmentHistory]  WITH CHECK ADD  CONSTRAINT [CK_EmployeeDepartmentHistory_EndDate] CHECK  (([EndDate]>=[StartDate] OR [EndDate] IS NULL))
  GO

  ALTER TABLE [HumanResources].[EmployeeDepartmentHistory] CHECK CONSTRAINT [CK_EmployeeDepartmentHistory_EndDate]
  GO

